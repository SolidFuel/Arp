name: MacOS Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# When pushing new commits, cancel any running builds on that branch
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
      
env:
  BUILD_TYPE: Release
  BUILD_DIR: build
  OS_TAG : macos
  # Just to make vscode happy. These will be set for real
  # in the config-info step
  SF_PROJECT : ""
  SF_VERSION : ""
  SF_PROJ_LOWER : ""
  SF_VST3_BUILD_PATH : ""
  SF_ARTIFACT_PATH : ""
  SF_BUILD_FILE : ""
  SF_OUTPUT_STEM: ""
  SF_IN_RUNNER: ""


jobs:
  build:
    runs-on: 'macos-latest'
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Get Config Info
      id: config-info
      working-directory: ${{github.workspace}}
      shell : bash
      run : |
        ./common/scripts/project_vars.sh > CONFIG.sh
        cat CONFIG.sh
        cat CONFIG.sh >> "$GITHUB_ENV"
        cat CONFIG.sh >> "$GITHUB_OUTPUT"

    - name: Build
      uses : SolidFuel/actions/config-build-test@main
      with :
        build_dir: ${{env.BUILD_DIR}}
        type : ${{env.BUILD_TYPE}}

    - name: Pluginval MacOS
      working-directory: ${{github.workspace}}/build
      run: |
        curl -L "https://github.com/Tracktion/pluginval/releases/latest/download/pluginval_macOS.zip" -o pluginval.zip
        unzip pluginval
        pluginval.app/Contents/MacOS/pluginval --strictness-level 10 \
          --validate-in-process --output-dir "." \
          "${{env.SF_VST3_BUILD_PATH}}/${{env.SF_ARTIFACT_PATH}}/${{env.SF_BUILD_FILE}}" || exit 1

    - name: Import Certificates
      run: |
        cert_tmp_dir=$(mktemp -d -t "certs.XXXXXX" ) || exit 1
        echo "${{secrets.SIGN_APP_CERT}}" | base64 -d -i - -o ${cert_tmp_dir}/app_cert.p12
        echo "${{secrets.SIGN_INSTALL_CERT}}" | base64 -d -i - -o ${cert_tmp_dir}/install_cert.p12
        /usr/bin/security create-keychain -p "${{secrets.SIGN_KEYCHAIN_PASSWORD}}" signing_temp.keychain
        /usr/bin/security set-keychain-settings -lut 3600 signing_temp.keychain
        /usr/bin/security unlock-keychain -p "${{secrets.SIGN_KEYCHAIN_PASSWORD}}" signing_temp.keychain

        /usr/bin/security import ${cert_tmp_dir}/app_cert.p12 \
          -k signing_temp.keychain -f pkcs12 -A -T /usr/bin/codesign -T /usr/bin/security \
          -P "${{secrets.SIGN_APP_PASSWORD}}"
    
        /usr/bin/security import ${cert_tmp_dir}/install_cert.p12 \
            -k signing_temp.keychain -f pkcs12 -A -T /usr/bin/codesign -T /usr/bin/security \
            -P "${{secrets.SIGN_INSTALL_PASSWORD}}"
    
        /usr/bin/security set-key-partition-list -S apple-tool:,apple: \
          -k "${{secrets.SIGN_KEYCHAIN_PASSWORD}}" signing_temp.keychain
    
        /usr/bin/security list-keychains -d user -s signing_temp.keychain login.keychain
    

    - name : Codesign plugin
      working-directory : ${{github.workspace}}/build
      run : |
        BINARY="${{env.SF_VST3_BUILD_PATH}}/${{env.SF_ARTIFACT_PATH}}/${{env.SF_BUILD_FILE}}/Contents/MacOS/${{env.SF_PROJECT}}"
        codesign --force -s "${{ secrets.DEVELOPER_ID_APPLICATION}}" \
          -v "${BINARY}" \
          --strict --options=runtime --timestamp

        codesign --force -s "${{ secrets.DEVELOPER_ID_APPLICATION}}" \
          -v "${{env.SF_VST3_BUILD_PATH}}/${{env.SF_ARTIFACT_PATH}}/${{env.SF_BUILD_FILE}}" \
          --strict --options=runtime --timestamp
    
    - name : Create PKG file
      id : create_pkg
      working-directory : ${{github.workspace}}/build
      run : |
        pkgbuild --component ${{env.SF_VST3_BUILD_PATH}}/${{env.SF_BUILD_FILE}}  \
          --install-location /Library/Audio/Plug-Ins/VST3/SolidFuel \
          --sign "${{secrets.DEVELOPER_ID_INSTALLER}}" \
          ./${{env.SF_PROJECT}}-unsigned.pkg

        productbuild --package ./${{env.SF_PROJECT}}-unsigned.pkg \
              --sign "${{secrets.DEVELOPER_ID_INSTALLER}}" \
            ./${{env.SF_OUTPUT_STEM}}-universal.pkg

        echo "PKGNAME=${{env.SF_OUTPUT_STEM}}-universal.pkg" >> "$GITHUB_OUTPUT"
        

    - name : Notarize PKG
      working-directory : ${{github.workspace}}/build
      run : |
        echo "---Notarize---"
        xcrun notarytool submit "${{steps.create_pkg.outputs.PKGNAME }}" \
          --apple-id "${{ secrets.NOTARIZATION_USERNAME }}" \
          --password "${{ secrets.NOTARIZATION_PASSWORD }}" \
          --team-id "${{ secrets.TEAM_ID }}" --wait
        echo "---Notarized---"

        echo "---Staple---"
        xcrun stapler staple "${{steps.create_pkg.outputs.PKGNAME }}"
        echo "---Stapled---"

    - name: Upload plugin
      uses: actions/upload-artifact@v3
      with:
        name: ${{steps.create_pkg.outputs.PKGNAME }}
        path: ${{github.workspace}}/build/${{steps.create_pkg.outputs.PKGNAME }}

